{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "eb908e4c-3fa1-32a7-8d8f-7899fa1a022b",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "8c4c5fcc-e380-37e6-845c-b011d1b189d5",
              "name": "resources.rules.remove-package-cache",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.remove-package-cache"
              },
              "fullDescription": {
                "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3009](https://github.com/hadolint/hadolint/wiki/DL3009)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.remove-package-cache"
                ]
              }
            },
            {
              "id": "f4fb1564-8260-3df4-b452-a6ab2c784b2d",
              "name": "bash.lang.security.ifs-tampering.ifs-tampering",
              "shortDescription": {
                "text": "Opengrep Finding: bash.lang.security.ifs-tampering.ifs-tampering"
              },
              "fullDescription": {
                "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/bash.lang.security.ifs-tampering.ifs-tampering",
              "help": {
                "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/bash.lang.security.ifs-tampering.ifs-tampering)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "bash.lang.security.ifs-tampering.ifs-tampering"
                ]
              }
            },
            {
              "id": "4f3161c1-4c1b-302d-87e2-f27b1e0a87ec",
              "name": "dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
              "shortDescription": {
                "text": "Opengrep Finding: dockerfile.security.missing-user-entrypoint.missing-user-entrypoint"
              },
              "fullDescription": {
                "text": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
              "help": {
                "text": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint)\n - [https://owasp.org/Top10/A04_2021-Insecure_Design](https://owasp.org/Top10/A04_2021-Insecure_Design)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "dockerfile.security.missing-user-entrypoint.missing-user-entrypoint"
                ]
              }
            },
            {
              "id": "557401ea-c44c-317a-99ed-86ed708808c5",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "5406f1c1-075b-34a9-a4f2-cd9ff2ab7eb3",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "0446db19-7ab6-3e8b-8d1c-151eca33c2b3",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "39e5d4cc-14b0-3998-bb9f-f6a1ba57a23e",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "4914836c-0195-32fc-bf0f-f7f03d5c8cce",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "10de2408-2d6b-369e-8802-ee5834f8895f",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "88f9de0d-3b65-39b8-9f89-2bfd56fbd15a",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "5857c493-6438-373b-8c51-9141ffe4a822",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "fc5b46a6-b996-3161-af11-7c79e03be5a6",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "6d13897c-ccaf-35da-9586-71a35868fe02",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "f255b804-4f98-35ea-8e62-9feb49663df5",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "f9b26469-4d64-36b5-b37b-7e206405643e",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "cbb83e46-b0ee-3aff-ae11-44235f670667",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "5e78f59c-6d51-3c26-83df-7bd222296b09",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "2a1a0810-65fe-3ff7-8640-20ab4dec89d9",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "125e5fe6-4caf-35b6-8bc4-a00d819e29d5",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "5ae32e9b-f331-3565-926b-07c91370213c",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "1fa01245-a0d3-31eb-a68c-3d969b89c812",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "b5d611d8-836c-3f30-be09-086bed5f9b12",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "8f9545bb-0d35-3fb6-99d8-8ac644d8c32d",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "95bb84ec-c21c-3170-852d-a733953919c1",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "dad9f5dc-a504-3274-a3ed-7bd43ab167d6",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "964cfc00-e009-3507-b23f-280f4b43db82",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "bac700b7-14a7-31ef-9b96-e3b0de92b8a4",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "d34cfafe-5ec0-3cb0-b412-2c93c83a43dc",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "13964f7a-1b4b-37a6-88d6-58ebc47dc210",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "f8ede59b-b8be-373c-a00c-aa35db182a49",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "a8107e39-e1b6-3d13-adcc-7817342cfb1b",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "fa3c770f-e9e8-36ad-a1e7-39648101061d",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "7338d467-82cd-31ca-847c-ee12796e0f58",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "2f83024d-7bef-3a27-9bed-769f460be715",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "ddd67f86-8d70-3249-a77e-c0366b0ed7d2",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "b15eb4ea-1c1d-3494-afb5-e50a1584dfff",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "2dcc969a-474c-369b-aedc-65ad9095656e",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "833bfa0d-a30b-3380-b28e-bb848971fb5d",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "0f5a6f6f-e8a1-3a3e-87fb-4517b0e8e8ff",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "a2f2dfcb-ea53-325f-a8b3-5c12c6c82644",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "a8aad4cc-0d6f-3d74-b223-513cc7981323",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "9ea235ce-1c41-3f07-b41b-5ac7ef2887c8",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "06af2c6a-2bcf-3d0f-9618-5cac23a3618d",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "83cd393f-53fb-3f4d-bc38-7d10da405a09",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "59989493-0a08-3195-84a4-817f5502c7dd",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "30021810-c529-3318-a87c-c1a727b3b147",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "6e783de5-ee21-311a-88e0-d752ef841877",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "5421c308-0687-32c7-83f1-2b730ff23787",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "03a1cd2f-7a8f-3a38-a13c-5e1727b5099e",
              "name": "resources.rules.useless-inner-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-inner-function"
              },
              "fullDescription": {
                "text": "function `$FF` is defined inside a function but never used"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "function `$FF` is defined inside a function but never used\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "function `$FF` is defined inside a function but never used\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-inner-function"
                ]
              }
            },
            {
              "id": "b7e98db2-c7da-309e-8a0e-aa3900cddac7",
              "name": "resources.rules.useless-inner-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-inner-function"
              },
              "fullDescription": {
                "text": "function `$FF` is defined inside a function but never used"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "function `$FF` is defined inside a function but never used\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "function `$FF` is defined inside a function but never used\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-inner-function"
                ]
              }
            },
            {
              "id": "47740653-7372-3e49-a9b8-08ffd3234a9c",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "3fc4753f-71cb-31b1-9606-e6851fb29017",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "861202c7-b15a-3dc4-aa48-a725437fa772",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "1e797457-82ce-3ff4-8adf-60451123135e",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "a0ee3fe3-aafa-376a-9d8f-ef70a200a1f6",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "46f03688-8602-3f9f-94ba-a1e920ab5b50",
              "name": "resources.rules.dangerous-subprocess-use",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dangerous-subprocess-use"
              },
              "fullDescription": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess](https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess)\n - [https://docs.python.org/3/library/subprocess.html](https://docs.python.org/3/library/subprocess.html)\n - [https://docs.python.org/3/library/shlex.html](https://docs.python.org/3/library/shlex.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dangerous-subprocess-use"
                ]
              }
            },
            {
              "id": "9bff63d0-5da5-35ba-be40-77849e4b2190",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "462b8d2e-1512-37ac-8884-9172eec4a516",
              "name": "resources.rules.dangerous-subprocess-use",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dangerous-subprocess-use"
              },
              "fullDescription": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess](https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess)\n - [https://docs.python.org/3/library/subprocess.html](https://docs.python.org/3/library/subprocess.html)\n - [https://docs.python.org/3/library/shlex.html](https://docs.python.org/3/library/shlex.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dangerous-subprocess-use"
                ]
              }
            },
            {
              "id": "5f804616-570b-396c-aa34-c53fcd1c5f23",
              "name": "resources.rules.dangerous-subprocess-use",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dangerous-subprocess-use"
              },
              "fullDescription": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess](https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess)\n - [https://docs.python.org/3/library/subprocess.html](https://docs.python.org/3/library/subprocess.html)\n - [https://docs.python.org/3/library/shlex.html](https://docs.python.org/3/library/shlex.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dangerous-subprocess-use"
                ]
              }
            },
            {
              "id": "7e01eb92-c4f5-33a2-b98e-dddbf56beaf6",
              "name": "resources.rules.dangerous-subprocess-use",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dangerous-subprocess-use"
              },
              "fullDescription": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess](https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess)\n - [https://docs.python.org/3/library/subprocess.html](https://docs.python.org/3/library/subprocess.html)\n - [https://docs.python.org/3/library/shlex.html](https://docs.python.org/3/library/shlex.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dangerous-subprocess-use"
                ]
              }
            },
            {
              "id": "5d7d8c21-18d1-39c0-9d32-25954b52cfc2",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "f9c71ace-9db1-3924-adda-b4515ef593a0",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "441cd2c1-21a5-37b2-9dc0-a781bba2771b",
              "name": "resources.rules.insecure-xml-use",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.insecure-xml-use"
              },
              "fullDescription": {
                "text": "Insecure XML parsing functionality, prefer 'defusedxml'"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Insecure XML parsing functionality, prefer 'defusedxml'\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Insecure XML parsing functionality, prefer 'defusedxml'\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.insecure-xml-use"
                ]
              }
            },
            {
              "id": "ea8ee679-43a8-3a0c-852b-9fb8f2039984",
              "name": "bash.lang.security.ifs-tampering.ifs-tampering",
              "shortDescription": {
                "text": "Opengrep Finding: bash.lang.security.ifs-tampering.ifs-tampering"
              },
              "fullDescription": {
                "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/bash.lang.security.ifs-tampering.ifs-tampering",
              "help": {
                "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/bash.lang.security.ifs-tampering.ifs-tampering)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "bash.lang.security.ifs-tampering.ifs-tampering"
                ]
              }
            },
            {
              "id": "4186ca40-660d-34c4-bf9d-6cf466cc3185",
              "name": "bash.lang.security.ifs-tampering.ifs-tampering",
              "shortDescription": {
                "text": "Opengrep Finding: bash.lang.security.ifs-tampering.ifs-tampering"
              },
              "fullDescription": {
                "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/bash.lang.security.ifs-tampering.ifs-tampering",
              "help": {
                "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/bash.lang.security.ifs-tampering.ifs-tampering)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "bash.lang.security.ifs-tampering.ifs-tampering"
                ]
              }
            },
            {
              "id": "367eb6ae-9ff0-36c4-b450-fa34ac8d0677",
              "name": "python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2",
              "shortDescription": {
                "text": "Opengrep Finding: python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2"
              },
              "fullDescription": {
                "text": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2",
              "help": {
                "text": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2)\n - [https://jinja.palletsprojects.com/en/2.11.x/api/#basics](https://jinja.palletsprojects.com/en/2.11.x/api/#basics)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "8c4c5fcc-e380-37e6-845c-b011d1b189d5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 19,
                  "snippet": {
                    "text": "RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5e22b0c34e83bf79efa9a77031a36d3f350db625eaac83de6e71bc37803aa1178b1d4c305de33eb4d35b4632b149df8f8293c20e4be74a38aa8ed5dc74d88919_0"
          },
          "properties": {}
        },
        {
          "ruleId": "eb908e4c-3fa1-32a7-8d8f-7899fa1a022b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM base-container"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "feaf7ee25a5f477d1d6180335004f2dd2d0024fbd3dc41d7d50ad0046d877571629b4f7801be0d1263a40aaf71e4243fb4ea9795f22b2dd0aeb7e0494aea4bad_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f4fb1564-8260-3df4-b452-a6ab2c784b2d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "local.sh",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 9,
                  "endLine": 39,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  local IFS=','"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5b783edad0c057a90eac557a33c6a52bb35e93898bb17415466ddb8374d3afbb7c285d02341ad8c4d54a654d8c9d0f2f6d71b26a14c7f3a87a780c72026c06fd_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4f3161c1-4c1b-302d-87e2-f27b1e0a87ec",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 40,
                  "snippet": {
                    "text": "ENTRYPOINT [\"python3\", \"-m\", \"openllm\"]"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "818ebe7aad2ce0b7bf4565a9db5f27f0aba95a426ea54eec13694ac16eec77eaf9d9c5534b7ec7139c52dcdf544fe6ec5c85087325529c973b0a635537ec7218_0"
          },
          "properties": {}
        },
        {
          "ruleId": "557401ea-c44c-317a-99ed-86ed708808c5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM base as protobuf-3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f2edff90db2d800d01bf75dc9702db4687597ed45544de1ac7d49ecc4b0937d301f134829d33668861773eb82fa918c7107eeea181b3dca8e00b262589df6286_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5406f1c1-075b-34a9-a4f2-cd9ff2ab7eb3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 62,
                  "snippet": {
                    "text": "RUN --mount=type=cache,target=/root/.cache/pip pip install -r requirements.txt"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f505fb43cd4a9922145cc0aa2e8692346a68f6e8ad4a9dc60766094113db82e76d51e28f1dbc74a09ff33cf4f4bb9fe16e5d4b9a29ddddfb1ac7ac0e99bcc018_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0446db19-7ab6-3e8b-8d1c-151eca33c2b3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 62,
                  "snippet": {
                    "text": "RUN --mount=type=cache,target=/root/.cache/pip pip install -r requirements.txt"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f505fb43cd4a9922145cc0aa2e8692346a68f6e8ad4a9dc60766094113db82e76d51e28f1dbc74a09ff33cf4f4bb9fe16e5d4b9a29ddddfb1ac7ac0e99bcc018_1"
          },
          "properties": {}
        },
        {
          "ruleId": "39e5d4cc-14b0-3998-bb9f-f6a1ba57a23e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM base as protobuf-4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f2edff90db2d800d01bf75dc9702db4687597ed45544de1ac7d49ecc4b0937d301f134829d33668861773eb82fa918c7107eeea181b3dca8e00b262589df6286_1"
          },
          "properties": {}
        },
        {
          "ruleId": "4914836c-0195-32fc-bf0f-f7f03d5c8cce",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 62,
                  "endColumn": 13,
                  "snippet": {
                    "text": "FROM scratch as protobuf-3-output"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0a6fa2f60cc667b7e1187a414196a070a51fe6063bfb45afe157e961910ea7466cd345a8f17e3c1954e5669231c3d1fe6f3d7c2feecdef87f227a8271a481578_0"
          },
          "properties": {}
        },
        {
          "ruleId": "10de2408-2d6b-369e-8802-ee5834f8895f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 14,
                  "snippet": {
                    "text": "FROM protobuf-3 as run-grpcio-tools-3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1872247491a2c4ff65c7608ff6624d342ece3d411dfd7bed55c8b8aab492ffebc36ca2b89c38bdc3910192be5d20818810c9b143cd9cac243034b1fb0fffa90d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "88f9de0d-3b65-39b8-9f89-2bfd56fbd15a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 14,
                  "snippet": {
                    "text": "FROM protobuf-4 as run-grpcio-tools-4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1872247491a2c4ff65c7608ff6624d342ece3d411dfd7bed55c8b8aab492ffebc36ca2b89c38bdc3910192be5d20818810c9b143cd9cac243034b1fb0fffa90d_1"
          },
          "properties": {}
        },
        {
          "ruleId": "5857c493-6438-373b-8c51-9141ffe4a822",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/dev.Dockerfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 13,
                  "snippet": {
                    "text": "FROM scratch as protobuf-4-output"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0a6fa2f60cc667b7e1187a414196a070a51fe6063bfb45afe157e961910ea7466cd345a8f17e3c1954e5669231c3d1fe6f3d7c2feecdef87f227a8271a481578_1"
          },
          "properties": {}
        },
        {
          "ruleId": "fc5b46a6-b996-3161-af11-7c79e03be5a6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/src/openllm_client/_stream.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 53,
                  "endLine": 19,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  _decoder: SSEDecoder = attr.field(factory=lambda: SSEDecoder())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f4b7976714fdd0e62904f86fe1f8b92943ee66b28321042222b9390e14fc2255c1767c46425a7904a3e8789e64aae33272f3771e8e8ec43585ecd51809e1fd2c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6d13897c-ccaf-35da-9586-71a35868fe02",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-client/src/openllm_client/_stream.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 53,
                  "endLine": 51,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  _decoder: SSEDecoder = attr.field(factory=lambda: SSEDecoder())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f4b7976714fdd0e62904f86fe1f8b92943ee66b28321042222b9390e14fc2255c1767c46425a7904a3e8789e64aae33272f3771e8e8ec43585ecd51809e1fd2c_1"
          },
          "properties": {}
        },
        {
          "ruleId": "f255b804-4f98-35ea-8e62-9feb49663df5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/_configuration.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 82,
                  "endLine": 317,
                  "endColumn": 116,
                  "snippet": {
                    "text": "    generation_config: GenerationConfig = pydantic.Field(default_factory=lambda: GenerationConfig.model_construct())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "da4ac606c210508aaaa88c2d073dc5a19df96bbc2cae8beb4cd3a8d001220054937b8fcad2a6113e689733081db812cb68bfadfbe47bd103e090b995815d06b2_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f9b26469-4d64-36b5-b37b-7e206405643e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'compatible_options' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/_configuration.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 573,
                  "startColumn": 3,
                  "endLine": 578,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  def compatible_options(self, request: ChatCompletionRequest | CompletionRequest) -> dict[str, t.Any]:\n    from .protocol.openai import ChatCompletionRequest, CompletionRequest\n\n    if isinstance(request, (ChatCompletionRequest, CompletionRequest)):\n      return self.openai.build(self, request)\n    raise TypeError(f'Unknown request type {type(request)}')"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4f05c57a93697ba81c6bed4653b064bcb139754f0875b8b8c99c9df4243591917916c5eb07a29e2f868340fe6ed32e427a0e4288a1eeb87cd338d8ac3f0bc960_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cbb83e46-b0ee-3aff-ae11-44235f670667",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'build' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/_configuration.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 6,
                  "endLine": 596,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    @staticmethod\n    def build(config: LLMConfig, request: ChatCompletionRequest | CompletionRequest) -> dict[str, t.Any]:\n      d = dict(\n        temperature=first_not_none(request.temperature, config['temperature']),\n        top_p=first_not_none(request.top_p, config['top_p']),\n        top_k=first_not_none(request.top_k, config['top_k']),\n        best_of=first_not_none(request.best_of, config['best_of']),\n        n=first_not_none(request.n, default=config['n']),\n        stop=first_not_none(request.stop, default=None),\n        max_new_tokens=first_not_none(request.max_tokens, default=config['max_tokens']),\n        presence_penalty=first_not_none(request.presence_penalty, default=config['presence_penalty']),\n        frequency_penalty=first_not_none(request.frequency_penalty, default=config['frequency_penalty']),\n      )\n      if hasattr(request, 'logprobs'):\n        d['logprobs'] = first_not_none(request.logprobs, default=config['logprobs'])\n      return d"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "db20a4174ce3c3857122025a1350895ede9e06b813dc40840ecab75912acf5f34caeccab77a898828b3d9b48b38070afb0ebc0888bac6019a81e60da2efc9b5b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5e78f59c-6d51-3c26-83df-7bd222296b09",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/config/configuration_auto.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 36,
                  "endLine": 87,
                  "endColumn": 115,
                  "snippet": {
                    "text": "      self._modules[module_name] = importlib.import_module(f'.configuration_{module_name}', 'openllm_core.config')"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5a1130d7163968302e9c8f53ff6df8cbba60c710c5bcaf13d3032ea5866e1be4c558fdb221283506401ad2313608fbf68dd2d310ad13637661e2181f3fc74dc1_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2a1a0810-65fe-3ff7-8640-20ab4dec89d9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 52,
                  "endLine": 115,
                  "endColumn": 75,
                  "snippet": {
                    "text": "  id: str = pydantic.Field(default_factory=lambda: gen_random_uuid('cmpl'))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_0"
          },
          "properties": {}
        },
        {
          "ruleId": "125e5fe6-4caf-35b6-8bc4-a00d819e29d5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 57,
                  "endLine": 116,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  created: int = pydantic.Field(default_factory=lambda: int(time.monotonic()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_1"
          },
          "properties": {}
        },
        {
          "ruleId": "5ae32e9b-f331-3565-926b-07c91370213c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 57,
                  "endLine": 126,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  created: int = pydantic.Field(default_factory=lambda: int(time.monotonic()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_3"
          },
          "properties": {}
        },
        {
          "ruleId": "1fa01245-a0d3-31eb-a68c-3d969b89c812",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 52,
                  "endLine": 125,
                  "endColumn": 75,
                  "snippet": {
                    "text": "  id: str = pydantic.Field(default_factory=lambda: gen_random_uuid('cmpl'))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_2"
          },
          "properties": {}
        },
        {
          "ruleId": "b5d611d8-836c-3f30-be09-086bed5f9b12",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 52,
                  "endLine": 159,
                  "endColumn": 79,
                  "snippet": {
                    "text": "  id: str = pydantic.Field(default_factory=lambda: gen_random_uuid('chatcmpl'))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_4"
          },
          "properties": {}
        },
        {
          "ruleId": "8f9545bb-0d35-3fb6-99d8-8ac644d8c32d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 61,
                  "endLine": 161,
                  "endColumn": 72,
                  "snippet": {
                    "text": "  usage: UsageInfo = pydantic.Field(default_factory=lambda: UsageInfo())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_6"
          },
          "properties": {}
        },
        {
          "ruleId": "95bb84ec-c21c-3170-852d-a733953919c1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 57,
                  "endLine": 160,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  created: int = pydantic.Field(default_factory=lambda: int(time.monotonic()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_5"
          },
          "properties": {}
        },
        {
          "ruleId": "dad9f5dc-a504-3274-a3ed-7bd43ab167d6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 52,
                  "endLine": 168,
                  "endColumn": 79,
                  "snippet": {
                    "text": "  id: str = pydantic.Field(default_factory=lambda: gen_random_uuid('chatcmpl'))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_7"
          },
          "properties": {}
        },
        {
          "ruleId": "964cfc00-e009-3507-b23f-280f4b43db82",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 57,
                  "endLine": 169,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  created: int = pydantic.Field(default_factory=lambda: int(time.monotonic()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_8"
          },
          "properties": {}
        },
        {
          "ruleId": "bac700b7-14a7-31ef-9b96-e3b0de92b8a4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 57,
                  "endLine": 176,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  created: int = pydantic.Field(default_factory=lambda: int(time.monotonic()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_9"
          },
          "properties": {}
        },
        {
          "ruleId": "d34cfafe-5ec0-3cb0-b412-2c93c83a43dc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 52,
                  "endLine": 184,
                  "endColumn": 80,
                  "snippet": {
                    "text": "  id: str = pydantic.Field(default_factory=lambda: gen_random_uuid('modelperm'))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_11"
          },
          "properties": {}
        },
        {
          "ruleId": "13964f7a-1b4b-37a6-88d6-58ebc47dc210",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 80,
                  "endLine": 180,
                  "endColumn": 99,
                  "snippet": {
                    "text": "  permission: t.List[ModelPermission] = pydantic.Field(default_factory=lambda: [ModelPermission()])"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_10"
          },
          "properties": {}
        },
        {
          "ruleId": "f8ede59b-b8be-373c-a00c-aa35db182a49",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/protocol/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 57,
                  "endLine": 186,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  created: int = pydantic.Field(default_factory=lambda: int(time.monotonic()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8445bf36de1262ed27eb6f1af8e90c18a962f3bcb6cf0fb0bdc567f3c293e5810c673efc1a04a44c1d27880b1d6cdb90e3f743113d00d475cace05cdcee67749_12"
          },
          "properties": {}
        },
        {
          "ruleId": "a8107e39-e1b6-3d13-adcc-7817342cfb1b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r'(?<!^)(?=[A-Z])'` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/analytics.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 18,
                  "endLine": 75,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    event_name = re.sub(r'(?<!^)(?=[A-Z])', '_', self.__class__.__name__).lower()"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2371ec739fd81ff9080b19380b711fc35b41c3d1c419209f5aadbb0ac3af4501cabeded5a0678ad696e7de36ac4d33a138ecce8f37c7eb19154dde8ca09aae05_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fa3c770f-e9e8-36ad-a1e7-39648101061d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/dantic.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 14,
                  "endLine": 331,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    module = importlib.import_module(module_name)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c916918ae1814dad60aeb9da6ba936529f7bb08c6286ea4091cce9273bcfeb9c2ede82661b3dfb231fe822e46528e4c55869daeae4d4e45685ccaec25cca78c7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7338d467-82cd-31ca-847c-ee12796e0f58",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/lazy.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 16,
                  "endLine": 54,
                  "endColumn": 54,
                  "snippet": {
                    "text": "      module = importlib.import_module(self.__name__)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8d65b68387d2d09830b174006f08cee4ff454e779d156e41eb9eec5f14275b98c68a3c1704b1cc3e70051a6fb7867273f52ca9eab22173bfed84f4759f084389_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2f83024d-7bef-3a27-9bed-769f460be715",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/serde.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 15,
                  "endLine": 25,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  lambda cls: make_dict_structure_fn(\n    cls, converter, _cattrs_forbid_extra_keys=getattr(cls, '__forbid_extra_keys__', False)\n  ),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ceb3a498d8274d4f5ef4f9fe78b7e040dec3b6960be4c8f613807f6ef2e392ba8e6fb6e6d4e207b357af293fdd505469ed3b2f0b2c13a63a0d40d103084096d4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ddd67f86-8d70-3249-a77e-c0366b0ed7d2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/lazy.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 14,
                  "endLine": 255,
                  "endColumn": 71,
                  "snippet": {
                    "text": "      return importlib.import_module('.' + module_name, self.__name__)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "9db80d30a8dad05ac2a0fd1159fb7aeb8910dd84a2fc1ffc9a1497189fcd3ebde309c6fd40eeca58b41a1e1b5c7199da9d753b99189e3aff00189c7807d956ed_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b15eb4ea-1c1d-3494-afb5-e50a1584dfff",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/serde.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 15,
                  "endLine": 31,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  lambda cls: make_dict_unstructure_fn(\n    cls, converter, _cattrs_omit_if_default=getattr(cls, '__omit_if_default__', False)\n  ),"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ceb3a498d8274d4f5ef4f9fe78b7e040dec3b6960be4c8f613807f6ef2e392ba8e6fb6e6d4e207b357af293fdd505469ed3b2f0b2c13a63a0d40d103084096d4_1"
          },
          "properties": {}
        },
        {
          "ruleId": "2dcc969a-474c-369b-aedc-65ad9095656e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-core/src/openllm_core/utils/serde.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 72,
                  "snippet": {
                    "text": "converter.register_unstructure_hook(datetime, lambda dt: dt.isoformat())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ceb3a498d8274d4f5ef4f9fe78b7e040dec3b6960be4c8f613807f6ef2e392ba8e6fb6e6d4e207b357af293fdd505469ed3b2f0b2c13a63a0d40d103084096d4_2"
          },
          "properties": {}
        },
        {
          "ruleId": "833bfa0d-a30b-3380-b28e-bb848971fb5d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'chat_completion_stream_generator' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 3,
                  "endLine": 183,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  async def chat_completion_stream_generator(\n    self,\n    request: ChatCompletionRequest,\n    model_name: str,\n    request_id: str,\n    created_time: int,\n    generator: t.AsyncIterator[RequestOutput],\n  ):\n    first_iteration = True\n\n    previous_texts = [''] * self.llm.config['n']\n    previous_num_tokens = [0] * self.llm.config['n']\n    finish_reason_sent = [False] * self.llm.config['n']\n    try:\n      async for request_output in generator:\n        if first_iteration:\n          role = self.get_chat_role(request)\n          for i in range(self.llm.config['n']):\n            choice_data = ChatCompletionResponseStreamChoice(\n              index=i, delta=Delta(role=role), logprobs=None, finish_reason=None\n            )\n            chunk = ChatCompletionStreamResponse(\n              id=request_id, created=created_time, choices=[choice_data], model=model_name\n            )\n            data = chunk.model_dump_json(exclude_unset=True)\n          yield f'data: {data}\\n\\n'\n\n          if request.echo:\n            last_msg_content = ''\n            if (\n              request.messages\n              and isinstance(request.messages, list)\n              and request.messages[-1].get('content')\n              and request.messages[-1].get('role') == role\n            ):\n              last_msg_content = request.messages[-1]['content']\n\n            if last_msg_content:\n              for i in range(request.n):\n                choice_data = ChatCompletionResponseStreamChoice(\n                  index=i, delta=Delta(content=last_msg_content), finish_reason=None\n                )\n                chunk = ChatCompletionStreamResponse(\n                  id=request_id, created=created_time, choices=[choice_data], logprobs=None, model=model_name\n                )\n                data = chunk.model_dump_json(exclude_unset=True)\n                yield f'data: {data}\\n\\n'\n          first_iteration = False\n\n        for output in request_output.outputs:\n          i = output.index\n\n          if finish_reason_sent[i]:\n            continue\n\n          delta_token_ids = output.token_ids[previous_num_tokens[i] :]\n          top_logprobs = output.logprobs[previous_num_tokens[i] :] if output.logprobs else None\n          logprobs = None\n\n          if request.logprobs:\n            logprobs = self._create_logprobs(\n              token_ids=delta_token_ids,\n              top_logprobs=top_logprobs,\n              num_output_top_logprobs=request.logprobs,\n              initial_text_offset=len(previous_texts[i]),\n            )\n\n          delta_text = output.text[len(previous_texts[i]) :]\n          previous_texts[i] = output.text\n          previous_num_tokens[i] = len(output.token_ids)\n          if output.finish_reason is None:\n            # Send token-by-token response for each request.n\n            choice_data = ChatCompletionResponseStreamChoice(\n              index=i, delta=Delta(content=delta_text), logprobs=logprobs, finish_reason=None\n            )\n            chunk = ChatCompletionStreamResponse(\n              id=request_id, created=created_time, choices=[choice_data], model=model_name\n            )\n            data = chunk.model_dump_json(exclude_unset=True)\n            yield f'data: {data}\\n\\n'\n          else:\n            # Send the finish response for each request.n only once\n            prompt_tokens = len(request_output.prompt_token_ids)\n            final_usage = UsageInfo(\n              prompt_tokens=prompt_tokens,\n              completion_tokens=previous_num_tokens[i],\n              total_tokens=prompt_tokens + previous_num_tokens[i],\n            )\n            choice_data = ChatCompletionResponseStreamChoice(\n              index=i, delta=Delta(content=delta_text), logprobs=logprobs, finish_reason=output.finish_reason\n            )\n            chunk = ChatCompletionStreamResponse(\n              id=request_id, created=created_time, choices=[choice_data], model=model_name\n            )\n            if final_usage is not None:\n              chunk.usage = final_usage\n            data = chunk.model_dump_json(exclude_unset=True, exclude_none=True)\n            yield f'data: {data}\\n\\n'\n            finish_reason_sent[i] = True\n    except ValueError as e:\n      data = self.create_error_response(str(e)).model_dump_json()\n      yield f'data: {data}\\n\\n'\n    # Send the final done message after all response.n are finished\n    yield 'data: [DONE]\\n\\n'"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7b4103c0d80f0d44ad8828e03779d7de7baf61d9eec9d17c137ee87ad423c0a35c4255f2101f77a2e961ec49b728e89ae7be4930af48e2ba48c2074ed13c2334_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0f5a6f6f-e8a1-3a3e-87fb-4517b0e8e8ff",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'chat_completions' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 3,
                  "endLine": 78,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  async def chat_completions(self, request: ChatCompletionRequest, raw_request: Request):\n    if request.logit_bias is not None and len(request.logit_bias) > 0:\n      return self.create_error_response(\"'logit_bias' is not supported .\", NotSupportedError)\n\n    error = await self._check_model(request)\n    if error is not None:\n      return error\n\n    try:\n      prompt: str = self.llm._tokenizer.apply_chat_template(\n        conversation=request.messages,\n        tokenize=False,\n        add_generation_prompt=request.add_generation_prompt,\n        chat_template=request.chat_template if request.chat_template != 'None' else None,\n      )\n    except Exception as e:\n      traceback.print_exc()\n      return self.create_error_response(f'Failed to apply chat template: {e}')\n\n    model_name, request_id = request.model, gen_random_uuid('chatcmpl')\n    created_time = int(time.monotonic())\n\n    generator = self.llm.generate_iterator(prompt, request_id=request_id, **request.model_dump())\n    if request.stream:\n      return self.chat_completion_stream_generator(request, model_name, request_id, created_time, generator)\n\n    try:\n      return await self.chat_completion_full_generator(\n        request, raw_request, model_name, request_id, created_time, generator\n      )\n    except Exception as err:\n      traceback.print_exc()\n      return self.create_error_response(str(err))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7da389f16d2294da81c15d21247746a8a04cc87cfc8e4d1a552e77996211d3a64fff964fc1a444b9da5b35ba027d2a3c9f92e45b8491b78f63d553dd98fe5bab_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a2f2dfcb-ea53-325f-a8b3-5c12c6c82644",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'chat_completion_full_generator' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 3,
                  "endLine": 255,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  async def chat_completion_full_generator(\n    self,\n    request: ChatCompletionRequest,\n    raw_request: Request,\n    model_name: str,\n    request_id: str,\n    created_time: int,\n    generator: t.AsyncIterator[RequestOutput],\n  ):\n    final_result: RequestOutput = None\n\n    try:\n      async for request_output in generator:\n        if await raw_request.is_disconnected():\n          await self.llm._model.abort(request_id)\n          return self.create_error_response('Client disconnected.')\n        final_result = request_output\n    except ValueError as e:\n      await self.llm._model.abort(request_id)\n      return self.create_error_response(str(e))\n\n    if final_result is None:\n      return self.create_error_response('No result is returned.')\n\n    choices = []\n    role = self.get_chat_role(request)\n\n    for output in final_result.outputs:\n      token_ids = output.token_ids\n      top_logprobs = output.logprobs\n\n      logprobs = None\n      if request.logprobs:\n        logprobs = self._create_logprobs(\n          token_ids=token_ids, top_logprobs=top_logprobs, num_output_top_logprobs=request.logprobs\n        )\n\n      choice_data = ChatCompletionResponseChoice(\n        index=output.index,\n        message=ChatMessage(role=role, content=output.text),\n        logprobs=logprobs,\n        finish_reason=output.finish_reason,\n      )\n      choices.append(choice_data)\n\n    if request.echo:\n      last_msg_content = ''\n      if (\n        request.messages\n        and isinstance(request.messages, list)\n        and request.messages[-1].get('content')\n        and request.messages[-1].get('role') == role\n      ):\n        last_msg_content = request.messages[-1]['content']\n\n      for choice in choices:\n        full_message = last_msg_content + choice.message.content\n        choice.message.content = full_message\n\n    num_prompt_tokens = len(final_result.prompt_token_ids)\n    num_generated_tokens = sum(len(output.token_ids) for output in final_result.outputs)\n    usage = UsageInfo(\n      prompt_tokens=num_prompt_tokens,\n      completion_tokens=num_generated_tokens,\n      total_tokens=num_prompt_tokens + num_generated_tokens,\n    )\n    response = ChatCompletionResponse(\n      id=request_id, created=created_time, model=model_name, choices=choices, usage=usage\n    )\n\n    return response"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a7e9c11d2ec7c589990e435c56b7dfd67cb0e34a6dc361b636cc0cef14aba7516a9f4eadd0220a918bad5f2e4c4659c852ce6dc8daf6bdcd2ce516add4055c39_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a8aad4cc-0d6f-3d74-b223-513cc7981323",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'get_chat_role' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 3,
                  "endLine": 259,
                  "endColumn": 94,
                  "snippet": {
                    "text": "  def get_chat_role(self, request: ChatCompletionRequest) -> str:\n    return request.messages[-1]['role'] if not request.add_generation_prompt else 'assistant'"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6239824a104c1639a5c8bc6f5c7d6ed7b227b70869e70f9aa94433fc4b29149d6196eb69be51a52573ca01ff1b08444481cae6f323dfcaa9935975acd55497b7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9ea235ce-1c41-3f07-b41b-5ac7ef2887c8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'completions' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 4,
                  "endLine": 262,
                  "endColumn": 90,
                  "snippet": {
                    "text": "  @staticmethod\n  async def completions(self, request) -> t.AsyncGenerator[CompletionResponse, None]: ..."
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a6c8e70dba3f11129aa744442bea6aefe9d183b17e0f069f479223ee83aeb598c31cf065793104395b3972b4b2f39bd4d8c4bccaccc5a45c1297e815a077ddf1_0"
          },
          "properties": {}
        },
        {
          "ruleId": "06af2c6a-2bcf-3d0f-9618-5cac23a3618d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function '_validate_prompt' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 3,
                  "endLine": 285,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  def _validate_prompt(\n    self,\n    request: ChatCompletionRequest | CompletionRequest,\n    prompt: str | None = None,\n    prompt_ids: list[int] | None = None,\n  ) -> Error | None:\n    if not (prompt or prompt_ids):\n      raise ValueError(\"'prompt' or 'prompt_ids' must be provided.\")\n    if prompt and prompt_ids:\n      raise ValueError(\"'prompt' and 'prompt_ids' are mutually exclusive.\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f7b04b6807a32b92440fa93a63d16e1facb2b0df2798b660464fe1c09e94c0445c300394f5871eb27db02479db43cc065586214d6476f19fce6d04205c9ce0cd_0"
          },
          "properties": {}
        },
        {
          "ruleId": "83cd393f-53fb-3f4d-bc38-7d10da405a09",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'chat_completions_v1' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_service.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 3,
                  "endLine": 151,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  @app_v1.post(\n    '/chat/completions',\n    tags=['OpenAI'],\n    status_code=HTTPStatus.OK,\n    summary='Given a list of messages comprising a conversation, the model will return a response.',\n    operation_id='openai__chat_completions',\n  )\n  async def chat_completions_v1(\n    self,\n    raw_request: Request,\n    request: ChatCompletionRequest = ChatCompletionRequest(\n      messages=[\n        MessageParam(role='system', content='You are acting as Ernest Hemmingway.'),\n        MessageParam(role='user', content='Hi there!'),\n        MessageParam(role='assistant', content='Yes?'),\n      ],\n      model=core.utils.normalise_model_name(model_id),\n      n=1,\n      stream=True,\n    ),\n  ):\n    generator = await self.openai.chat_completions(request, raw_request)\n    if isinstance(generator, Error):\n      # NOTE: safe to cast here as we know it's an error\n      return JSONResponse(content=generator.model_dump(), status_code=int(t.cast(str, generator.error.code)))\n    if request.stream is True:\n      return StreamingResponse(generator, media_type='text/event-stream')\n    return JSONResponse(content=generator.model_dump())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fbe1d97fbc666d75d2d69cf2bb37bdeeddf15257adb27605390a37ed17499a5a1b9f15147b600a3d36c9d61b712e68bbb06fec7e50cbc958b025d83cac64a97f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "59989493-0a08-3195-84a4-817f5502c7dd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function '_check_model' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/_openllm_tiny/_helpers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 3,
                  "endLine": 273,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  async def _check_model(self, request: ChatCompletionRequest | CompletionRequest) -> Error | None:\n    if request.model != self.llm.llm_type:\n      return error_response(\n        ModelNotFound,\n        f\"Model '{request.model}' does not exists. Try 'GET /v1/models' to see available models.\\nTip: If you are migrating from OpenAI, make sure to update your 'model' parameters in the request.\",\n      )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b8e8e4dac84c48efaef9b2ca18e2880f16a7f96a7c51962c897b7071af339151369a99bb67c7fbf166e22a293df3ee8c0fd66803bce2c080589285bcf0c912db_0"
          },
          "properties": {}
        },
        {
          "ruleId": "30021810-c529-3318-a87c-c1a727b3b147",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/bundle/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 57,
                  "endLine": 11,
                  "endColumn": 91,
                  "snippet": {
                    "text": "  version: VersionInfo = attr.field(converter=lambda s: VersionInfo.from_version_string(s))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "835551cb0d47eec386e67b4c1ff16b2bb045c08de963b1a088456ec0cfecefeb7058c76e8c8d19a561f63d47c1679f69b99db9e766e4d22b5b532976eb109681_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6e783de5-ee21-311a-88e0-d752ef841877",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/entrypoints/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 11,
                  "endLine": 9,
                  "endColumn": 63,
                  "snippet": {
                    "text": "    svc = importlib.import_module(f'.{module_name}', __name__).mount_to_svc(svc, llm)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5e7499829d5222bea63372ef84b09b1af9636332c86e9d05cb20c886635e1eff2a051520aad0242ad4877dcd8a51552220da27d6948dc89e62ec959738f4569b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5421c308-0687-32c7-83f1-2b730ff23787",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'check_model' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/entrypoints/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 79,
                  "endColumn": 4,
                  "snippet": {
                    "text": "async def check_model(request, model):\n  if request.model == model:\n    return None\n  return error_response(\n    HTTPStatus.NOT_FOUND,\n    f\"Model '{request.model}' does not exists. Try 'GET /v1/models' to see available models.\\nTip: If you are migrating from OpenAI, make sure to update your 'model' parameters in the request.\",\n  )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e3e6517e26c398a42f29ad9f8f67aca7613f55d022f1655ef04dc172184af592f34229513ea9da8efc49d5702733dd5cfe41daecf6941613ee03558b58f4853d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "03a1cd2f-7a8f-3a38-a13c-5e1727b5099e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "function `create_stream_response_json` is defined inside a function but never used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/entrypoints/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 3,
                  "endLine": 207,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  def create_stream_response_json(index, text, finish_reason=None, usage=None):\n    response = ChatCompletionStreamResponse(\n      id=request_id,\n      created=created_time,\n      model=model_name,\n      choices=[\n        ChatCompletionResponseStreamChoice(index=index, delta=Delta(content=text), finish_reason=finish_reason)\n      ],\n    )\n    if usage is not None:\n      response.usage = usage\n    return jsonify_attr(response)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "67543a177b063667c98bf24db38c318561d0d7d04265418e3061731f3599a837a49de1d45401113de7ea98ee7695db02661cd16ffa4f630529678030e73f86ec_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b7e98db2-c7da-309e-8a0e-aa3900cddac7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "function `create_stream_response_json` is defined inside a function but never used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/entrypoints/openai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 3,
                  "endLine": 345,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  def create_stream_response_json(index, text, logprobs=None, finish_reason=None, usage=None):\n    response = CompletionStreamResponse(\n      id=request_id,\n      created=created_time,\n      model=model_name,\n      choices=[CompletionResponseStreamChoice(index=index, text=text, logprobs=logprobs, finish_reason=finish_reason)],\n    )\n    if usage:\n      response.usage = usage\n    return jsonify_attr(response)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f9925b2e2342cbafbf1381fb54952c70c456e9f2114d2e68104b6923f61bf0df107440c8fd067b468b35a177b4dab70214df23c894574733a991dad213bb2860_0"
          },
          "properties": {}
        },
        {
          "ruleId": "47740653-7372-3e49-a9b8-08ffd3234a9c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'check_model' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/entrypoints/openai.pyi",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 33,
                  "snippet": {
                    "text": "async def check_model(\n  request: Union[CompletionRequest, ChatCompletionRequest], model: str\n) -> Optional[JSONResponse]: ..."
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "066bc833f25b4c2d8aa3f218cb3425af771fd851ce6b179c946171bf655f4536ea21d645b7e99938aee1e71ef118a9550eec6176b6e9973316b131d595d87255_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3fc4753f-71cb-31b1-9606-e6851fb29017",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/serialisation/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 20,
                  "endLine": 92,
                  "endColumn": 81,
                  "snippet": {
                    "text": "    call = getattr(importlib.import_module(f'.{serde}', 'openllm.serialisation'), fn)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a44920ad8be95ca63d8d1c9eda938cbe450a81753efcc858d9d5fcda5ff145539c00a536625dcd95d999766570da80cd1f1ced7a963e09cbad1bd12a5a100ef8_0"
          },
          "properties": {}
        },
        {
          "ruleId": "861202c7-b15a-3dc4-aa48-a725437fa772",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/serialisation/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 12,
                  "endLine": 110,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    return importlib.import_module(f'.{name}', __name__)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "39d918289725127fa4ea7e705287c697ebf82730e22c45fce7f29fb7eb0c7fa5c6ebb22f7e210e5327946880d99e2c66e734b89721801a74cfefdc5c9315cf55_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1e797457-82ce-3ff4-8adf-60451123135e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/serialisation/transformers/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 6,
                  "endLine": 95,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    [importlib.import_module(tokenizer.__module__)],"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1cf19f534ccad5a18560b2e24c29a31de73658b7bf5c4b8c111e3d1b1747442aa98744b1ee2abd4484d6612066b1ee5695bb9e1e49299051a520e47264bbb0eb_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a0ee3fe3-aafa-376a-9d8f-ef70a200a1f6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm/serialisation/transformers/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 45,
                  "endLine": 135,
                  "endColumn": 86,
                  "snippet": {
                    "text": "      bentomodel.enter_cloudpickle_context([importlib.import_module(model.__module__)], bentomodel.imported_modules)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "752a417e894aca462902631a3be341f74b780640363ae90801001a7ac0a31a723419c8e05352b99e7f42dac89d25d15b519c41c4f451e1f826d538f470c3e854_0"
          },
          "properties": {}
        },
        {
          "ruleId": "46f03688-8602-3f9f-94ba-a1e920ab5b50",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected subprocess function 'check_output' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm_cli/_sdk.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 14,
                  "endLine": 191,
                  "endColumn": 96,
                  "snippet": {
                    "text": "    output = subprocess.check_output(args, env=os.environ.copy(), cwd=build_ctx or os.getcwd())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "02d22ad4a4d138c98bf61449f905c82f8b11b927af785d3069b479e82f247951a84717a766d3136043373f173f0de0166e42b59a2f15810d7415e5e661ce0e01_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9bff63d0-5da5-35ba-be40-77849e4b2190",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r'__object__:(\\{.*\\})$'` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm_cli/_sdk.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 13,
                  "endLine": 197,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  matched = re.match(r'__object__:(\\{.*\\})$', output.decode('utf-8').strip())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f9c23a7b788eeae948da3473c6c3da0605b9f3cf297ba299b4d3df28f8fe8d6e30ef46f422eb0d4bb42159f305fd9895803b491d3618e003b3481fdaf7ff5b33_0"
          },
          "properties": {}
        },
        {
          "ruleId": "462b8d2e-1512-37ac-8884-9172eec4a516",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected subprocess function 'check_call' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm_cli/extension/dive_bentos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 5,
                  "endLine": 40,
                  "endColumn": 79,
                  "snippet": {
                    "text": "    subprocess.check_call([shutil.which('dir') or 'dir'], cwd=bentomodel.path)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e3bba9bbdcdf508bbd09ab200a63caf1ccd01f8724a91a581ba53a31b5de2eda91b979e363ef18f2c534792eb2c01c4c677932079bf59e467926133f6ef3b2d3_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5f804616-570b-396c-aa34-c53fcd1c5f23",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected subprocess function 'check_call' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm_cli/extension/dive_bentos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 5,
                  "endLine": 42,
                  "endColumn": 88,
                  "snippet": {
                    "text": "    subprocess.check_call([shutil.which('ls') or 'ls', '-Rrthla'], cwd=bentomodel.path)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e3bba9bbdcdf508bbd09ab200a63caf1ccd01f8724a91a581ba53a31b5de2eda91b979e363ef18f2c534792eb2c01c4c677932079bf59e467926133f6ef3b2d3_1"
          },
          "properties": {}
        },
        {
          "ruleId": "7e01eb92-c4f5-33a2-b98e-dddbf56beaf6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected subprocess function 'check_output' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm_cli/extension/playground.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 5,
                  "endLine": 100,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    subprocess.check_output([\n      sys.executable,\n      '-m',\n      'jupyter',\n      'notebook',\n      '--notebook-dir',\n      output_dir,\n      '--port',\n      str(port),\n      '--no-browser',\n      '--debug',\n    ])"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "52bc6c83324827f3ac05191676917a01361d372b886836e7709609e86619b13ba78d08a0ba663d030dc8d66a71f579fb9703ccd8a3d4c8e771f334a18d1d765c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5d7d8c21-18d1-39c0-9d32-25954b52cfc2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openllm-python/src/openllm_cli/playground/opt_tuned.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 33,
                  "endLine": 74,
                  "endColumn": 60,
                  "snippet": {
                    "text": "data = data.map(lambda samples: tokenizer(samples['quote']), batched=True)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f12e840417eaef14b00bf65b638fea53c2144e57b1989a9ff3d7900139e981114a98753d920e2c3dd08fa6fd9971cf551ca05e975c62bb738a94bce8e6d7a9a6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f9c71ace-9db1-3924-adda-b4515ef593a0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/dependencies.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 29,
                  "endLine": 36,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    default_factory=lambda: {\n      'status': 'Development Status',\n      'environment': 'Environment',\n      'license': 'License',\n      'topic': 'Topic',\n      'os': 'Operating System',\n      'audience': 'Intended Audience',\n      'typing': 'Typing',\n      'language': 'Programming Language',\n    }"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e1dcdd685757e430161bfd962a4734716a1a84179dc6a9bebf089b07249972ec96a2cf5c669a5fe4779869a5df15130ca52ac9f89bc0520780c191723d5cc539_0"
          },
          "properties": {}
        },
        {
          "ruleId": "441cd2c1-21a5-37b2-9dc0-a781bba2771b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Insecure XML parsing functionality, prefer 'defusedxml'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/generate-coverage.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 10,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  root = etree.fromstring(coverage_report.read_text())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4ed09f598bec0c094bf3c1b2a4e805578d9caf449cb026e36e48a47b9b530bacd5be181e8e87660628514c74cf4aeac6b88a9dedc4d40009e1557ef095e68e58_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ea8ee679-43a8-3a0c-852b-9fb8f2039984",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/run-release-action",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 1,
                  "endLine": 81,
                  "endColumn": 8,
                  "snippet": {
                    "text": "IFS='.'"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1201845345fc6652d75cc8c20f08ab88e08dc928a6d9f80bea278754b036c9fdf9013ada55bf5505ca770a9662c1c0bc162733d80f582451204ca8d0e673f564_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4186ca40-660d-34c4-bf9d-6cf466cc3185",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The special variable IFS affects how splitting takes place when expanding unquoted variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS=\",\" read -a my_array'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/run-release-action",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 1,
                  "endLine": 83,
                  "endColumn": 13,
                  "snippet": {
                    "text": "IFS=$OLD_IFS"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1201845345fc6652d75cc8c20f08ab88e08dc928a6d9f80bea278754b036c9fdf9013ada55bf5505ca770a9662c1c0bc162733d80f582451204ca8d0e673f564_1"
          },
          "properties": {}
        },
        {
          "ruleId": "367eb6ae-9ff0-36c4-b450-fa34ac8d0677",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/update-brew-tap.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  ENVIRONMENT = Environment(\n    extensions=['jinja2.ext.do', 'jinja2.ext.loopcontrols', 'jinja2.ext.debug'],\n    trim_blocks=True,\n    lstrip_blocks=True,\n    loader=FileSystemLoader((ROOT / 'Formula').__fspath__(), followlinks=True),\n  )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "028cdf73c697038ac9e5b96fcad3802aede7fe430583af7dcc6a23eeda9fedae94b4983cfd136d77ad70ae453a18809575d6c7938ac8297d2e82eb7ac883316e_0"
          },
          "properties": {}
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}